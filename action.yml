name: 'AI-Powered GitHub Issue Duplicates & Relations Detector'
description: 'Automatically detect duplicate and related GitHub issues using AI embeddings and GPT analysis'
author: 'Mack GÃ³rski'
branding:
  icon: 'copy'
  color: 'blue'

inputs:
  openai-api-key:
    description: 'OpenAI API key for embeddings and analysis'
    required: true
  duplicate-threshold:
    description: 'Similarity threshold for duplicate detection (0-1)'
    required: false
    default: '0.85'
  related-issue-threshold:
    description: 'Similarity threshold for related issues (0-1)'
    required: false
    default: '0.82'
  embedding-model:
    description: 'OpenAI embedding model to use'
    required: false
    default: 'text-embedding-3-large'
  max-issues-to-process:
    description: 'Maximum number of issues to process in a single run'
    required: false
    default: '100'
  issue-number:
    description: 'Specific issue number to check (if not triggered by issue event)'
    required: false
  azure-openai-endpoint:
    description: 'Your Azure OpenAI endpoint (e.g., https://<resource-name>.openai.azure.com)'
    required: false
  azure-openai-deployment:
    description: 'The deployment name containing your model'
    required: false
  azure-openai-version:
    description: 'Azure OpenAI API Version (reference "Data plane - inference" from https://learn.microsoft.com/en-us/azure/ai-foundry/openai/reference)'
    required: false

# Docker container approach
runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    OPENAI_API_KEY: ${{ inputs.openai-api-key }}
    DUPLICATE_THRESHOLD: ${{ inputs.duplicate-threshold }}
    RELATED_ISSUE_THRESHOLD: ${{ inputs.related-issue-threshold }}
    EMBEDDING_MODEL: ${{ inputs.embedding-model }}
    MAX_ISSUES_TO_PROCESS: ${{ inputs.max-issues-to-process }}
    ISSUE_NUMBER: ${{ inputs.issue-number }}
    AZURE_OPENAI_ENDPOINT: ${{ inputs.azure-openai-endpoint }}
    AZURE_OPENAI_DEPLOYMENT: ${{ inputs.azure-openai-deployment }}
    AZURE_OPENAI_VERSION: ${{ inputs.azure-openai-version }}